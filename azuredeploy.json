{
    "$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "virtualMachineName": {
            "type": "string",
            "defaultValue": "devvm",
            "metadata": {
                "description": "Name of Vurtual Machine"
            }
        },
        "virtualMachineSize": {
            "type": "string",
            "allowedValues": [
                "Standard_DS1_V2",
                "Standard_DS2_V2",
                "Standard_DS3_V2"
            ],
            "defaultValue": "Standard_DS1_V2",
            "metadata": {
                "description": "Size of Virual Machine"
            }
        },
        "ubuntuVersion": {
            "type": "string",
            "allowedValues": [
                "16.04-LTS",
                "17.04"
            ],
            "defaultValue": "16.04-LTS",
            "metadata": {
                "description": "Ubuntu Version"
            }
        },
        "adminUsername": {
            "type": "string",
            "defaultValue": "devadmin",
            "metadata": {
                "description": "Admin Username"
            }
        },
        "adminPassword": {
            "type": "securestring",
            "metadata": {
                "description": "Admin Password"
            }
        },
        "vncPassword": {
            "type": "securestring",
            "minLength": 8,
            "metadata": {
                "description": "VNC Password"
            }
        }
    },
    "variables": {
        "virtualNetworkName": "[concat(parameters('virtualMachineName'), '-vnet')]",
        "networkInterfaceName": "[concat(parameters('virtualMachineName'), '-nic')]",
        "networkSecurityGroupName": "[concat(parameters('virtualMachineName'), '-nsg')]",
        "storageAccountName": "[concat(uniquestring(resourceGroup().id, '-storage'))]",
        "storageAccountType": "Standard_LRS",
        "addressPrefix": "10.0.0.0/16",
        "subnetName": "subnet1",
        "subnetPrefix": "10.0.0.0/24",
        "publicIpAddressName": "[concat(parameters('virtualMachineName'), '-ip')]",
        "publicIpAddressType": "Dynamic",
        "vnetId": "[resourceId(resourceGroup().name,'Microsoft.Network/virtualNetworks', variables('virtualNetworkName'))]",
        "subnetRef": "[concat(variables('vnetId'), '/subnets/', variables('subnetName'))]",
        "customScriptLocation": "https://raw.githubusercontent.com/evanuum/azure-blockchain--ubuntu--blockchain--dev/master/scripts/",
        "wgetCommandPrefix": "[concat('wget --tries 20 --retry-connrefused --waitretry=15 -qO- ', variables('customScriptLocation'), 'installbcdevvm.sh | nohup /bin/bash -s ')]",
        "wgetCommandPostfix":  " > /var/log/initial-install.log 2>&1 &'",
        "commandPrefix": "/bin/bash -c '"
    },
    "resources": [
        {
            "type": "Microsoft.Compute/virtualMachines",
            "name": "[parameters('virtualMachineName')]",
            "apiVersion": "2016-04-30-preview",
            "location": "[resourceGroup().location]",
            "properties": {
                "osProfile": {
                    "computerName": "[parameters('virtualMachineName')]",
                    "adminUsername": "[parameters('adminUsername')]",
                    "adminPassword": "[parameters('adminPassword')]"
                },
                "hardwareProfile": {
                    "vmSize": "[parameters('virtualMachineSize')]"
                },
                "storageProfile": {
                    "imageReference": {
                        "publisher": "Canonical",
                        "offer": "UbuntuServer",
                        "sku": "[parameters('ubuntuVersion')]",
                        "version": "latest"
                    },
                    "osDisk": {
                        "createOption": "FromImage",
                        "vhd": {
                            "uri": "[concat(concat(reference(resourceId(resourceGroup().name, 'Microsoft.Storage/storageAccounts', variables('storageAccountName')), '2015-06-15').primaryEndpoints['blob'], 'vhds/'), parameters('virtualMachineName'), uniqueString(resourceGroup().id) ,'.vhd')]"
                        },
                        "name": "[parameters('virtualMachineName')]"
                    },
                    "dataDisks": []
                },
                "networkProfile": {
                    "networkInterfaces": [
                        {
                            "id": "[resourceId('Microsoft.Network/networkInterfaces', variables('networkInterfaceName'))]"
                        }
                    ]
                }
            },
            "dependsOn": [
                "[concat('Microsoft.Network/networkInterfaces/', variables('networkInterfaceName'))]"
            ]
        },
        {
            "name": "[variables('storageAccountName')]",
            "type": "Microsoft.Storage/storageAccounts",
            "apiVersion": "2015-06-15",
            "location": "[resourceGroup().location]",
            "properties": {
                "accountType": "[variables('storageAccountType')]"
            }
        },
        {
            "type": "Microsoft.Network/virtualNetworks",
            "name": "[variables('virtualNetworkName')]",
            "apiVersion": "2016-12-01",
            "location": "[resourceGroup().location]",
            "properties": {
                "addressSpace": {
                    "addressPrefixes": [
                        "[variables('addressPrefix')]"
                    ]
                },
                "subnets": [
                    {
                        "name": "[variables('subnetName')]",
                        "properties": {
                            "addressPrefix": "[variables('subnetPrefix')]"
                        }
                    }
                ]
            }
        },
        {
            "type": "Microsoft.Network/networkInterfaces",
            "name": "[variables('networkInterfaceName')]",
            "apiVersion": "2016-09-01",
            "location": "[resourceGroup().location]",
            "properties": {
                "ipConfigurations": [
                    {
                        "name": "ipconfig1",
                        "properties": {
                            "subnet": {
                                "id": "[variables('subnetRef')]"
                            },
                            "privateIPAllocationMethod": "Dynamic",
                            "publicIpAddress": {
                                "id": "[resourceId(resourceGroup().name,'Microsoft.Network/publicIpAddresses', variables('publicIpAddressName'))]"
                            }
                        }
                    }
                ],
                "networkSecurityGroup": {
                    "id": "[resourceId(resourceGroup().name, 'Microsoft.Network/networkSecurityGroups', variables('networkSecurityGroupName'))]"
                }
            },
            "dependsOn": [
                "[concat('Microsoft.Network/virtualNetworks/', variables('virtualNetworkName'))]",
                "[concat('Microsoft.Network/publicIpAddresses/', variables('publicIpAddressName'))]",
                "[concat('Microsoft.Network/networkSecurityGroups/', variables('networkSecurityGroupName'))]"
            ]
        },
        {
            "type": "Microsoft.Network/publicIpAddresses",
            "name": "[variables('publicIpAddressName')]",
            "apiVersion": "2016-09-01",
            "location": "[resourceGroup().location]",
            "properties": {
                "publicIpAllocationMethod": "[variables('publicIpAddressType')]"
            }
        },
        {
            "type": "Microsoft.Network/networkSecurityGroups",
            "name": "[variables('networkSecurityGroupName')]",
            "apiVersion": "2016-09-01",
            "location": "[resourceGroup().location]",
            "properties": {
                "securityRules": [
                    {
                        "name": "default-allow-ssh",
                        "properties": {
                            "priority": 1000,
                            "sourceAddressPrefix": "*",
                            "protocol": "Tcp",
                            "destinationPortRange": "22",
                            "access": "Allow",
                            "direction": "Inbound",
                            "sourcePortRange": "*",
                            "destinationAddressPrefix": "*"
                        }
                    }
                ]
            }
        },
        {
           "type": "",
           "name": "shutdown-computevm-bcdev",
           "apiVersion": "2016-05-15",
           "location": "[resourceGroup().location]",
           "dependsOn": [
               "[concat('Microsoft.Compute/virtualMachines/', parameters('virtualMachineName'))]"
           ],
           "properties": {
               "status": "Enabled",
               "taskType": "ComputeVmShutdownTask",
               "dailyRecurrence": {
                   "time": "1900"
               },
               "timeZoneId": "W. Europe Standard Time",
               "notificationSettings": {
                   "status": "Disabled"
               },
               "targetResourceId": "[resourceId('Microsoft.Compute/virtualMachines', parameters('virtualMachineName'))]"
           }
        },
        {
           "type": "",
           "name": "autostart-computevm-bcdev",
           "apiVersion": "2016-05-15",
           "location": "[resourceGroup().location]",
           "dependsOn": [
               "[concat('Microsoft.Compute/virtualMachines/', parameters('virtualMachineName'))]"
           ],
           "properties": {
               "status": "Enabled",
               "taskType": "ComputeVmAutoStart",
               "dailyRecurrence": {
                   "time": "0700"
               },
               "timeZoneId": "W. Europe Standard Time",
               "notificationSettings": {
                   "status": "Disabled"
               },
               "targetResourceId": "[resourceId('Microsoft.Compute/virtualMachines', parameters('virtualMachineName'))]"
           }
        },
        {
            "type": "Microsoft.Compute/virtualMachines/extensions",
            "name": "[concat(parameters('virtualMachineName'),'/installcustomscript')]",
            "apiVersion": "2016-03-30",
            "location": "[resourceGroup().location]",
            "dependsOn": [
                    "[concat('Microsoft.Compute/virtualMachines/', parameters('virtualMachineName'))]"
                ],
            "properties": {
                "publisher": "Microsoft.Azure.Extensions",
                "type": "CustomScript",
                "typeHandlerVersion": "2.0",
                "autoUpgradeMinorVersion": true,
                "settings": {
                    "commandToExecute": "[concat(variables('commandPrefix'), variables('wgetCommandPrefix'), parameters('adminUsername'), ' ', parameters('virtualMachineName'), ' ', parameters('vncPassword'), variables('wgetCommandPostfix'))]"
                }
            }
        }
    ],
    "outputs": { 
        "adminUsername": {
            "type": "string",
            "value": "[parameters('adminUsername')]"
        }
    }
}